from aiogram import Router, types
from aiogram.filters.command import Command, CommandObject
from aiogram.utils.markdown import hlink, hcode

from filters.chat_type import ChatTypeFilter
from database import get_config_data, set_config_data, set_member_chat_info, get_member_chat_info

router = Router()

# /title
@router.message(ChatTypeFilter(chat_type=["group", "supergroup"]), Command('title'))
async def set_chat_title(message: types.Message, command: CommandObject):
    """
    –ò–∑–º–µ–Ω–µ–Ω–∏–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —á–∞—Ç–∞ –Ω–∞ —Ç–æ, –∫–æ—Ç–æ—Ä–æ–µ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä —É–∫–∞–∑–∞–ª –≤ –∞—Ä–≥—É–º–µ–Ω—Ç–µ new

    –¢—Ä–µ–±—É–µ—Ç—Å—è 4+ —É—Ä–æ–≤–µ–Ω—å –∞–¥–º–∏–Ω–∫–∏
    
    –ê—Ä–≥—É–º–µ–Ω—Ç—ã:
    :new - –Ω–æ–≤–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —á–∞—Ç–∞
    """

    admin_info = await get_member_chat_info(message.chat.id, message.from_user.id)
    if admin_info is None: return await message.reply('‚ö†Ô∏è –í–∞—à–∞ –±–µ—Å–µ–¥–∞ –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∞!\n\n–†–µ—à–µ–Ω–∏–µ: *–≤–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É /startbot*', parse_mode= "Markdown")
    if admin_info[2] < 4: return await message.reply("‚ö†Ô∏è *–£ –≤–∞—Å –Ω–µ—Ç 4-–æ–≥–æ –∏ –≤—ã—à–µ —É—Ä–æ–≤–Ω—è –¥–æ—Å—Ç—É–ø–∞!*", parse_mode='Markdown')
    if command.args is None or len(command.args.strip()) < 0: return await message.reply("‚ö†Ô∏è –ù–µ–≤–µ—Ä–Ω—ã–π —Å–∏–Ω—Ç–∞–∫—Å–∏—Å!\n–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: */title <–Ω–æ–≤–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ>*!", parse_mode='Markdown')

    await message.chat.set_title(command.args)
    return await message.answer(f'üç© –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä {hlink(admin_info[3], message.from_user.url)} –∏–∑–º–µ–Ω–∏–ª –Ω–∞–∑–≤–∞–Ω–∏–µ –±–µ—Å–µ–¥—ã –Ω–∞ {hcode(command.args)}', parse_mode= "HTML")


# /description
@router.message(ChatTypeFilter(chat_type=["group", "supergroup"]), Command('desc', 'description'))
async def set_chat_description(message: types.Message, command: CommandObject):
    """
    –ò–∑–º–µ–Ω–µ–Ω–∏–µ –æ–ø–∏—Å–∞–Ω–∏–µ —á–∞—Ç–∞ –Ω–∞ —Ç–æ, –∫–æ—Ç–æ—Ä–æ–µ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä —É–∫–∞–∑–∞–ª –≤ –∞—Ä–≥—É–º–µ–Ω—Ç–µ new

    –¢—Ä–µ–±—É–µ—Ç—Å—è 4+ —É—Ä–æ–≤–µ–Ω—å –∞–¥–º–∏–Ω–∫–∏
    
    –ê—Ä–≥—É–º–µ–Ω—Ç—ã:
    :new - –Ω–æ–≤–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ —á–∞—Ç–∞
    """

    admin_info = await get_member_chat_info(message.chat.id, message.from_user.id)
    if admin_info is None: return await message.reply('‚ö†Ô∏è –í–∞—à–∞ –±–µ—Å–µ–¥–∞ –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∞!\n\n–†–µ—à–µ–Ω–∏–µ: *–≤–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É /startbot*', parse_mode= "Markdown")
    if admin_info[2] < 4: return await message.reply("‚ö†Ô∏è *–£ –≤–∞—Å –Ω–µ—Ç 4-–æ–≥–æ –∏ –≤—ã—à–µ —É—Ä–æ–≤–Ω—è –¥–æ—Å—Ç—É–ø–∞!*", parse_mode='Markdown')
    if command.args is None or len(command.args.strip()) < 0: return await message.reply("‚ö†Ô∏è –ù–µ–≤–µ—Ä–Ω—ã–π —Å–∏–Ω—Ç–∞–∫—Å–∏—Å!\n–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: */desc <–Ω–æ–≤–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ —á–∞—Ç–∞>*!", parse_mode='Markdown')

    await message.chat.set_description(command.args)
    return await message.answer(f'‚úèÔ∏è –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä {hlink(admin_info[3], message.from_user.url)} –∏–∑–º–µ–Ω–∏–ª –Ω–∞–∑–≤–∞–Ω–∏–µ –±–µ—Å–µ–¥—ã –Ω–∞ {hcode(command.args)}', parse_mode= "HTML")


# /setwelcome
@router.message(ChatTypeFilter(chat_type=["group", "supergroup"]), Command('setwelcome'))
async def set_chat_welcome(message: types.Message, command: CommandObject):
    """
    –ò–∑–º–µ–Ω–µ–Ω–∏–µ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –Ω–æ–≤—ã—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ —á–∞—Ç–∞ –Ω–∞ —Ç–æ, –∫–æ—Ç–æ—Ä–æ–µ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä —É–∫–∞–∑–∞–ª –≤ –∞—Ä–≥—É–º–µ–Ω—Ç–µ new

    –¢—Ä–µ–±—É–µ—Ç—Å—è 4+ —É—Ä–æ–≤–µ–Ω—å –∞–¥–º–∏–Ω–∫–∏
    
    –ê—Ä–≥—É–º–µ–Ω—Ç—ã:
    :new - –Ω–æ–≤–æ–µ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ —á–∞—Ç–∞
    """

    admin_info = await get_member_chat_info(message.chat.id, message.from_user.id)
    if admin_info is None: return await message.reply('‚ö†Ô∏è –í–∞—à–∞ –±–µ—Å–µ–¥–∞ –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∞!\n\n–†–µ—à–µ–Ω–∏–µ: *–≤–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É /startbot*', parse_mode= "Markdown")
    if admin_info[2] < 4: return await message.reply("‚ö†Ô∏è *–£ –≤–∞—Å –Ω–µ—Ç 4-–æ–≥–æ –∏ –≤—ã—à–µ —É—Ä–æ–≤–Ω—è –¥–æ—Å—Ç—É–ø–∞!*", parse_mode='Markdown')
    if command.args is None or len(command.args.strip()) <= 0: return await message.reply("‚ö†Ô∏è –ù–µ–≤–µ—Ä–Ω—ã–π —Å–∏–Ω—Ç–∞–∫—Å–∏—Å!\n–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: */setwelcome <–Ω–æ–≤–æ–µ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ —á–∞—Ç–∞>*!", parse_mode='Markdown')

    old_welcome = await get_config_data(message.chat.id)
    new_welcome = command.args

    await set_config_data(message.chat.id, 'welcome', new_welcome)
    return await message.answer(f'üìç –ú–æ–¥–µ—Ä–∞—Ç–æ—Ä {hlink(admin_info[3], message.from_user.url)} –∏–∑–º–µ–Ω–∏–ª –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ —á–∞—Ç–∞!\n\nüòí –°—Ç–∞—Ä–æ–µ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ: {hcode(old_welcome[1])}\nüòÉ –ù–æ–≤–æ–µ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ: {hcode(new_welcome)}', parse_mode= "HTML")


# /setrules
@router.message(ChatTypeFilter(chat_type=["group", "supergroup"]), Command('setrules'))
async def set_chat_rules(message: types.Message, command: CommandObject):
    """
    –ò–∑–º–µ–Ω–µ–Ω–∏–µ –ø—Ä–∞–≤–∏–ª —á–∞—Ç–∞ –Ω–∞ —Ç–µ, –∫–æ—Ç–æ—Ä—ã–µ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä —É–∫–∞–∑–∞–ª –≤ –∞—Ä–≥—É–º–µ–Ω—Ç–µ new

    –¢—Ä–µ–±—É–µ—Ç—Å—è 5+ —É—Ä–æ–≤–µ–Ω—å –∞–¥–º–∏–Ω–∫–∏
    
    –ê—Ä–≥—É–º–µ–Ω—Ç—ã:
    :new - –Ω–æ–≤—ã–µ –ø—Ä–∞–≤–∏–ª–∞ —á–∞—Ç–∞
    """

    admin_info = await get_member_chat_info(message.chat.id, message.from_user.id)
    if admin_info is None: return await message.reply('‚ö†Ô∏è –í–∞—à–∞ –±–µ—Å–µ–¥–∞ –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∞!\n\n–†–µ—à–µ–Ω–∏–µ: *–≤–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É /startbot*', parse_mode= "Markdown")
    if admin_info[2] < 4: return await message.reply("‚ö†Ô∏è *–£ –≤–∞—Å –Ω–µ—Ç 4-–æ–≥–æ –∏ –≤—ã—à–µ —É—Ä–æ–≤–Ω—è –¥–æ—Å—Ç—É–ø–∞!*", parse_mode='Markdown')
    if command.args is None or len(command.args.strip()) < 0: return await message.reply("‚ö†Ô∏è –ù–µ–≤–µ—Ä–Ω—ã–π —Å–∏–Ω—Ç–∞–∫—Å–∏—Å!\n–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: */setwelcome <–Ω–æ–≤–æ–µ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ —á–∞—Ç–∞>*!", parse_mode='Markdown')
        
    old_rules = await get_config_data(message.chat.id)
    new_rules = command.args
    
    await set_config_data(message.chat.id, 'rules', new_rules)
    return await message.answer(f'üß∏ –ú–æ–¥–µ—Ä–∞—Ç–æ—Ä {hlink(admin_info[3], message.from_user.url)} –∏–∑–º–µ–Ω–∏–ª –ø—Ä–∞–≤–∏–ª–∞ —á–∞—Ç–∞!\n\nüòí –°—Ç–∞—Ä—ã–µ –ø—Ä–∞–≤–∏–ª–∞: {hcode(old_rules[0])}\nüòÉ –ù–æ–≤—ã–µ –ø—Ä–∞–≤–∏–ª–∞: {hcode(new_rules)}', parse_mode= "HTML")


# /setvip
@router.message(ChatTypeFilter(chat_type=["group", "supergroup"]), Command('setvip'))
async def set_vip(message: types.Message, command: CommandObject):
    """
    –ò–∑–º–µ–Ω–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ VIP –Ω–∞ —É–∫–∞–∑–∞–Ω–Ω—ã–π –≤ –∞—Ä–≥—É–º–µ–Ω—Ç–µ new_status —É —Ç–æ–≥–æ, –Ω–∞ —á—å–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–≤–µ—Ç–∏–ª –º–æ–¥–µ—Ä–∞—Ç–æ—Ä
    
    –¢—Ä–µ–±—É–µ—Ç—Å—è 5+ —É—Ä–æ–≤–µ–Ω—å –∞–¥–º–∏–Ω–∫–∏  
    
    –ê—Ä–≥—É–º–µ–Ω—Ç—ã:  
    :new_status - –Ω–æ–≤—ã–π —Å—Ç–∞—Ç—É—Å VIP —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (0/1)
    """

    admin_info = await get_member_chat_info(message.chat.id, message.from_user.id)
    if admin_info is None: return await message.reply('‚ö†Ô∏è –í–∞—à–∞ –±–µ—Å–µ–¥–∞ –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∞!\n\n–†–µ—à–µ–Ω–∏–µ: *–≤–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É /startbot*', parse_mode= "Markdown")
    if admin_info[2] < 5: return await message.reply("‚ö†Ô∏è *–£ –≤–∞—Å –Ω–µ—Ç 5-–æ–≥–æ –∏ –≤—ã—à–µ —É—Ä–æ–≤–Ω—è –¥–æ—Å—Ç—É–ø–∞!*", parse_mode='Markdown')
    if message.reply_to_message is None and command.args is None: return await message.reply('‚ö†Ô∏è *–û—Ç–≤–µ—Ç—å—Ç–µ –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ, —á—Ç–æ–±—ã –≤—ã–¥–∞—Ç—å –∏–ª–∏ —Å–Ω—è—Ç—å VIP —Å—Ç–∞—Ç—É—Å –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—é, –∏–ª–∏ –≤–≤–µ–¥–∏—Ç–µ ID!*', parse_mode='Markdown')

    if message.reply_to_message is not None:
        new_status = command.args
        if new_status is None or new_status.isdecimal() == False: return await message.reply('‚ö†Ô∏è *–í—ã –Ω–µ–≤–µ—Ä–Ω–æ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç–µ –∫–æ–º–∞–Ω–¥—É!\n–ü—Ä–∞–≤–∏–ª—å–Ω–æ–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: /setvip –Ω–æ–≤—ã–π —Å—Ç–∞—Ç—É—Å <(0 - —Å–Ω—è—Ç—å | 1 - –≤—ã–¥–∞—Ç—å)>*', parse_mode='Markdown')
        user = message.reply_to_message.from_user
    
    else:
        args = command.args.split(' ')
        if len(args) != 2 or args[0].isdecimal() == False or args[1].isdecimal() == False: return await message.reply('‚ö†Ô∏è *–í—ã –Ω–µ–≤–µ—Ä–Ω–æ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç–µ –∫–æ–º–∞–Ω–¥—É!\n–ü—Ä–∞–≤–∏–ª—å–Ω–æ–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: /setvip <id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è> <–Ω–æ–≤—ã–π —Å—Ç–∞—Ç—É—Å (0 - —Å–Ω—è—Ç—å | 1 - –≤—ã–¥–∞—Ç—å)>*', parse_mode='Markdown')
        new_status = args[1]
        user = await message.chat.get_member(int(args[0]))
        user = user.user

    member_info = await get_member_chat_info(message.chat.id, user.id)
    if member_info != False and member_info != None and member_info[2] >= admin_info[2]: return await message.reply("‚ùå *–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å VIP —Å—Ç–∞—Ç—É—Å –¥–∞–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è!*", parse_mode='Markdown')
    if new_status != '0' and new_status != '1': return await message.reply('‚ö†Ô∏è *–ù–µ–≤–µ—Ä–Ω—ã–π –ø–æ—Å–ª–µ–¥–Ω–∏–π –∞—Ä–≥—É–º–µ–Ω—Ç! 1 - –≤—ã–¥–∞—Ç—å/2 - –∑–∞–±—Ä–∞—Ç—å!*', parse_mode='Markdown')
    
    await set_member_chat_info(message.chat.id, user.id, 'vip', new_status)
    return await message.answer(f'üíé –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä {hlink(admin_info[3], message.from_user.url)} <b>{"–≤—ã–¥–∞–ª" if new_status == "1" else "—Å–Ω—è–ª"} VIP —Å—Ç–∞—Ç—É—Å</b> –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {hlink(member_info[3], user.url)}', parse_mode= "HTML")


# /setnick
@router.message(ChatTypeFilter(chat_type=["group", "supergroup"]), Command('setnick', 'snick'))
async def set_nick_member(message: types.Message, command: CommandObject):
    admin_info = await get_member_chat_info(message.chat.id, message.from_user.id)
    if admin_info is None: return await message.reply('‚ö†Ô∏è –í–∞—à–∞ –±–µ—Å–µ–¥–∞ –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∞!\n\n–†–µ—à–µ–Ω–∏–µ: *–≤–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É /startbot*', parse_mode= "Markdown")
    if admin_info[2] < 5: return await message.reply("‚ö†Ô∏è *–£ –≤–∞—Å –Ω–µ—Ç 5-–æ–≥–æ –∏ –≤—ã—à–µ —É—Ä–æ–≤–Ω—è –¥–æ—Å—Ç—É–ø–∞!*", parse_mode='Markdown')
    if message.reply_to_message is None and command.args is None: return await message.reply('‚ö†Ô∏è *–û—Ç–≤–µ—Ç—å—Ç–µ –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ, —á—Ç–æ–±—ã –∏–∑–º–µ–Ω–∏—Ç—å –Ω–∏–∫ –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—é, –∏–ª–∏ –≤–≤–µ–¥–∏—Ç–µ ID!*', parse_mode='Markdown')

    if message.reply_to_message is not None:
        new_status = command.args
        if new_status is None: return await message.reply('‚ö†Ô∏è *–í—ã –Ω–µ–≤–µ—Ä–Ω–æ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç–µ –∫–æ–º–∞–Ω–¥—É!\n–ü—Ä–∞–≤–∏–ª—å–Ω–æ–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: /setnick <–Ω–æ–≤—ã–π –Ω–∏–∫>*', parse_mode='Markdown')
        user = message.reply_to_message.from_user
    
    else:
        args = command.args.split(' ')
        if len(args) != 2 or args[0].isdecimal() == False: return await message.reply('‚ö†Ô∏è *–í—ã –Ω–µ–≤–µ—Ä–Ω–æ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç–µ –∫–æ–º–∞–Ω–¥—É!\n–ü—Ä–∞–≤–∏–ª—å–Ω–æ–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: /setnick <id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è> <–Ω–æ–≤—ã–π –Ω–∏–∫>*', parse_mode='Markdown')
        new_status = args[1]
        user = await message.chat.get_member(int(args[0]))
        user = user.user

    member_info = await get_member_chat_info(message.chat.id, user.id)
    if member_info != False and member_info != None and member_info[2] >= admin_info[2]: return await message.reply("‚ùå *–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å –Ω–∏–∫ –¥–∞–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è!*", parse_mode='Markdown')

    await set_member_chat_info(message.chat.id, user.id, 'nick', new_status)
    return await message.answer(f'üí° –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä {hlink(admin_info[3], message.from_user.url)} <b>–∏–∑–º–µ–Ω–∏–ª</b> –Ω–∏–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {hlink(member_info[3], user.url)}\nüë§ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {hcode(user.id)}\nüñ• –ù–æ–≤—ã–π –Ω–∏–∫: {hcode(new_status)}', parse_mode= "HTML")


# /setadmin
@router.message(ChatTypeFilter(chat_type=["group", "supergroup"]), Command('setadmin'))
async def set_admin(message: types.Message, command: CommandObject):
    admin_info = await get_member_chat_info(message.chat.id, message.from_user.id)
    if admin_info is None: return await message.reply('‚ö†Ô∏è –í–∞—à–∞ –±–µ—Å–µ–¥–∞ –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∞!\n\n–†–µ—à–µ–Ω–∏–µ: *–≤–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É /startbot*', parse_mode= "Markdown")
    if admin_info[2] < 5: return await message.reply("‚ö†Ô∏è *–£ –≤–∞—Å –Ω–µ—Ç 5-–æ–≥–æ –∏ –≤—ã—à–µ —É—Ä–æ–≤–Ω—è –¥–æ—Å—Ç—É–ø–∞!*", parse_mode='Markdown')
    if message.reply_to_message is None and command.args is None: return await message.reply('‚ö†Ô∏è *–û—Ç–≤–µ—Ç—å—Ç–µ –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ, —á—Ç–æ–±—ã –≤—ã–¥–∞—Ç—å –∏–ª–∏ —Å–Ω—è—Ç—å –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—é, –∏–ª–∏ –≤–≤–µ–¥–∏—Ç–µ ID!*', parse_mode='Markdown')

    if message.reply_to_message is not None:
        new_status = command.args
        if new_status is None or new_status.isdecimal() == False: return await message.reply('‚ö†Ô∏è *–í—ã –Ω–µ–≤–µ—Ä–Ω–æ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç–µ –∫–æ–º–∞–Ω–¥—É!\n–ü—Ä–∞–≤–∏–ª—å–Ω–æ–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: /setadmin <—É—Ä–æ–≤–µ–Ω—å –∞–¥–º–∏–Ω–∫–∏>*', parse_mode='Markdown')
        user = message.reply_to_message.from_user
    
    else:
        args = command.args.split(' ')
        if len(args) != 2 or args[0].isdecimal() == False or args[1].isdecimal() == False: return await message.reply('‚ö†Ô∏è *–í—ã –Ω–µ–≤–µ—Ä–Ω–æ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç–µ –∫–æ–º–∞–Ω–¥—É!\n–ü—Ä–∞–≤–∏–ª—å–Ω–æ–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: /setadmin <id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è> <—É—Ä–æ–≤–µ–Ω—å –∞–¥–º–∏–Ω–∫–∏>*', parse_mode='Markdown')
        new_status = args[1]
        user = await message.chat.get_member(int(args[0]))
        user = user.user

    if admin_info[2] <= int(new_status): return await message.reply(f'‚ö†Ô∏è *–í—ã –º–æ–∂–µ—Ç–µ –≤—ã–¥–∞—Ç—å –ª–∏—à—å –∞–¥–º–∏–Ω–∫—É —Å 0 –ø–æ {int(admin_info[2]) - 1} —É—Ä–æ–≤–Ω—è*', parse_mode='Markdown')
    member_info = await get_member_chat_info(message.chat.id, user.id)
    if member_info != False and member_info != None and member_info[2] >= admin_info[2]: return await message.reply("‚ùå *–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å –ø—Ä–∞–≤–∞ –¥–∞–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è!*", parse_mode='Markdown')

    await set_member_chat_info(message.chat.id, user.id, 'admin', new_status)
    return await message.answer(f'üëÆ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä {hlink(admin_info[3], message.from_user.url)} <b>–∏–∑–º–µ–Ω–∏–ª</b> —É—Ä–æ–≤–µ–Ω—å –∞–¥–º–∏–Ω-–ø—Ä–∞–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {hlink(member_info[3], user.url)}\nüë§ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {hcode(user.id)}\nü´° –ù–æ–≤—ã–π —É—Ä–æ–≤–µ–Ω—å: {hcode(new_status)}', parse_mode= "HTML")
